diff --git a/src/Form/LinkCheckerAdminSettingsForm.php.old b/src/Form/LinkCheckerAdminSettingsForm.php
index fcf4013..f71de7f 100644
--- a/src/Form/LinkCheckerAdminSettingsForm.php.old
+++ b/src/Form/LinkCheckerAdminSettingsForm.php
@@ -2,6 +2,7 @@

 namespace Drupal\linkchecker\Form;

+use Drupal\Core\Batch\BatchBuilder;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -141,10 +142,20 @@ public function buildForm(array $form, FormStateInterface $form_state) {
     ];
     $form['status']['title']['#markup'] = $this->t('Progress of link extraction.');
     $total_count = $this->extractorBatch->getTotalEntitiesToProcess();
+
     if (!empty($total_count)) {
       $indexed_count = $this->extractorBatch->getNumberOfProcessedEntities();
       $percent = round((100 * $indexed_count) / $total_count);

+      if(((int) $indexed_count) !== $total_count) {
+        $form = ['process_all' => [
+          '#type' => 'submit',
+          '#value' => $this->t('Process all'),
+          '#description' => 'Processes all unprocessed links',
+          '#submit' => ['::submitForm', '::submitProcessAll'],
+        ]] + $form; // this will make sure the button is at the top
+      }
+
       $index_progress = [
         '#theme' => 'progress_bar',
         '#percent' => $percent,
@@ -644,4 +655,18 @@ public function submitClearAnalyzeLinks(array &$form, FormStateInterface $form_s
     $this->submitAnalyzeLinks($form, $form_state);
   }

+
+  public function submitProcessAll(): void
+  {
+    $totalCount = $this->extractorBatch->getTotalEntitiesToProcess();
+    $processedCount = (int) $this->extractorBatch->getNumberOfProcessedEntities();
+
+    $batch = new BatchBuilder();
+    $batch->setTitle('Extract entities')
+      ->addOperation([$this->extractorBatch, 'batchProcessEntities'], [$totalCount - $processedCount])
+      ->setProgressive()
+      ->setFinishCallback([$this->extractorBatch, 'batchFinished']);
+
+    batch_set($batch->toArray());
+  }
 }
