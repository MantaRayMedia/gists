diff --git a/js/ImageWidgetCropType.js b/js/ImageWidgetCropType.js
index c8b6807..a08a4f5 100644
--- a/js/ImageWidgetCropType.js
+++ b/js/ImageWidgetCropType.js
@@ -768,9 +768,9 @@
   Drupal.ImageWidgetCropType.prototype.toImageDimensions = function (x, y) {
     var imageData = this.cropper.getImageData();
     return {
-      width: x * (this.originalWidth / imageData.width),
-      height: y * (this.originalHeight / imageData.height)
-    }
+      width: Math.ceil(x * (this.originalWidth / imageData.width)),
+      height: Math.ceil(y * (this.originalHeight / imageData.height))
+    };
   };
 
   /**
@@ -810,13 +810,17 @@
     for (var i = 0, l = dimensions.length; i < l; i++) {
       var dimension = dimensions[i];
       if (converted[dimension] < this.softLimit[dimension]) {
-        if (!this.softLimit.reached[dimension]) {
+        if (dimension === "width" && converted["height"] >= this.softLimit["height"]) {
+          this.softLimit.reached[dimension] = false;
+        } else if (Math.abs(converted[dimension] - this.softLimit[dimension]) <= 1) {
+          this.softLimit.reached[dimension] = false;
+        } else {
           this.softLimit.reached[dimension] = true;
         }
-      }
-      else if (this.softLimit.reached[dimension]) {
+      } else {
         this.softLimit.reached[dimension] = false;
       }
+
       this.$cropperWrapper.toggleClass('cropper--' + dimension + '-soft-limit-reached', this.softLimit.reached[dimension]);
     }
     this.$wrapper.trigger('summaryUpdated');
@@ -827,6 +831,7 @@
    */
   Drupal.ImageWidgetCropType.prototype.updateSummary = function () {
     var summary = [];
+
     if (this.getValue('applied')) {
       summary.push(Drupal.t('Cropping applied.'));
     }
@@ -837,3 +842,4 @@
   };
 
 }(jQuery, Drupal));
+
